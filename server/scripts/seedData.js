require('dotenv').config();
const mongoose = require('mongoose');
const { Class, Subject, Teacher, Lesson, BellSchedule } = require('../models');

async function seedDatabase() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connected to MongoDB');

    // Clear existing data
    await Promise.all([
      Class.deleteMany({}),
      Subject.deleteMany({}), 
      Teacher.deleteMany({}),
      Lesson.deleteMany({}),
      BellSchedule.deleteMany({})
    ]);
    console.log('üóëÔ∏è  Cleared existing data');

    // Seed Classes
    const classes = [
      { code: '5a', grade: 5, letter: '–∞', title: '5–ê' },
      { code: '5b', grade: 5, letter: '–±', title: '5–ë' },
      { code: '5v', grade: 5, letter: '–≤', title: '5–í' },
      { code: '6a', grade: 6, letter: '–∞', title: '6–ê' },
      { code: '6b', grade: 6, letter: '–±', title: '6–ë' },
      { code: '6v', grade: 6, letter: '–≤', title: '6–í' },
      { code: '7a', grade: 7, letter: '–∞', title: '7–ê' },
      { code: '7b', grade: 7, letter: '–±', title: '7–ë' },
      { code: '7v', grade: 7, letter: '–≤', title: '7–í' },
      { code: '8a', grade: 8, letter: '–∞', title: '8–ê' },
      { code: '8b', grade: 8, letter: '–±', title: '8–ë' },
      { code: '8v', grade: 8, letter: '–≤', title: '8–í' },
      { code: '9a', grade: 9, letter: '–∞', title: '9–ê' },
      { code: '9b', grade: 9, letter: '–±', title: '9–ë' },
      { code: '9v', grade: 9, letter: '–≤', title: '9–í' },
      { code: '10a', grade: 10, letter: '–∞', title: '10–ê' },
      { code: '10b', grade: 10, letter: '–±', title: '10–ë' },
      { code: '11a', grade: 11, letter: '–∞', title: '11–ê' }
    ];
    await Class.insertMany(classes);
    console.log(`üìö Created ${classes.length} classes`);

    // Seed Subjects
    const subjects = [
      { name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', short: '–ú–∞—Ç–µ–º.' },
      { name: '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫', short: '–†—É—Å—Å–∫–∏–π' },
      { name: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', short: '–õ–∏—Ç-—Ä–∞' },
      { name: '–§–∏–∑–∏–∫–∞', short: '–§–∏–∑–∏–∫–∞' },
      { name: '–•–∏–º–∏—è', short: '–•–∏–º–∏—è' },
      { name: '–ë–∏–æ–ª–æ–≥–∏—è', short: '–ë–∏–æ–ª–æ–≥–∏—è' },
      { name: '–ò—Å—Ç–æ—Ä–∏—è', short: '–ò—Å—Ç–æ—Ä–∏—è' },
      { name: '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', short: '–û–±—â–µ—Å—Ç.' },
      { name: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', short: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è' },
      { name: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', short: '–ê–Ω–≥–ª.' },
      { name: '–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞', short: '–§–∏–∑-—Ä–∞' },
      { name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', short: '–ò–Ω—Ñ–æ—Ä–º.' },
      { name: '–û–ë–ñ', short: '–û–ë–ñ' },
      { name: '–ò—Å–∫—É—Å—Å—Ç–≤–æ', short: '–ò—Å–∫—É—Å—Å—Ç–≤–æ' },
      { name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è', short: '–¢–µ—Ö–Ω.' }
    ];
    const createdSubjects = await Subject.insertMany(subjects);
    console.log(`üìñ Created ${subjects.length} subjects`);

    // Seed Teachers
    const teachers = [
      { code: 'teacher001', fullName: '–ò–≤–∞–Ω–æ–≤–∞ –ò—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞', shortName: '–ò–≤–∞–Ω–æ–≤–∞ –ò.–ê.', extId: 'teacher001' },
      { code: 'teacher002', fullName: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á', shortName: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.', extId: 'teacher002' },
      { code: 'teacher003', fullName: '–°–∏–¥–æ—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞', shortName: '–°–∏–¥–æ—Ä–æ–≤–∞ –ê.–í.', extId: 'teacher003' },
      { code: 'teacher004', fullName: '–ö–æ–∑–ª–æ–≤ –ú–∏—Ö–∞–∏–ª –°–µ—Ä–≥–µ–µ–≤–∏—á', shortName: '–ö–æ–∑–ª–æ–≤ –ú.–°.', extId: 'teacher004' },
      { code: 'teacher005', fullName: '–ú–æ—Ä–æ–∑–æ–≤–∞ –ï–ª–µ–Ω–∞ –î–º–∏—Ç—Ä–∏–µ–≤–Ω–∞', shortName: '–ú–æ—Ä–æ–∑–æ–≤–∞ –ï.–î.', extId: 'teacher005' },
      { code: 'teacher006', fullName: '–í–æ–ª–∫–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ù–∏–∫–æ–ª–∞–µ–≤–∏—á', shortName: '–í–æ–ª–∫–æ–≤ –ê.–ù.', extId: 'teacher006' },
      { code: 'teacher007', fullName: '–õ–µ–±–µ–¥–µ–≤–∞ –¢–∞—Ç—å—è–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞', shortName: '–õ–µ–±–µ–¥–µ–≤–∞ –¢.–ò.', extId: 'teacher007' },
      { code: 'teacher008', fullName: '–ù–æ–≤–∏–∫–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á', shortName: '–ù–æ–≤–∏–∫–æ–≤ –î.–ê.', extId: 'teacher008' }
    ];
    const createdTeachers = await Teacher.insertMany(teachers);
    console.log(`üë®‚Äçüè´ Created ${teachers.length} teachers`);

    // Seed Bell Schedule
    const bellSchedule = {
      name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç',
      periods: [
        { num: 1, timeStart: '08:30', timeEnd: '09:10' },
        { num: 2, timeStart: '09:20', timeEnd: '10:00' },
        { num: 3, timeStart: '10:10', timeEnd: '10:50' },
        { num: 4, timeStart: '11:10', timeEnd: '11:50' },
        { num: 5, timeStart: '12:10', timeEnd: '12:50' },
        { num: 6, timeStart: '13:05', timeEnd: '13:45' },
        { num: 7, timeStart: '14:00', timeEnd: '14:40' },
        { num: 8, timeStart: '15:00', timeEnd: '15:40' },
        { num: 9, timeStart: '15:50', timeEnd: '16:30' },
        { num: 10, timeStart: '16:40', timeEnd: '17:20' },
        { num: 11, timeStart: '17:30', timeEnd: '18:10' },
        { num: 12, timeStart: '18:20', timeEnd: '19:00' }
      ]
    };
    await BellSchedule.create(bellSchedule);
    console.log('‚è∞ Created bell schedule');

    // Seed sample lessons for class 7a
    const mathSubject = createdSubjects.find(s => s.name === '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞');
    const russianSubject = createdSubjects.find(s => s.name === '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫');
    const physicsSubject = createdSubjects.find(s => s.name === '–§–∏–∑–∏–∫–∞');
    const englishSubject = createdSubjects.find(s => s.name === '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫');
    const historySubject = createdSubjects.find(s => s.name === '–ò—Å—Ç–æ—Ä–∏—è');

    const teacher1 = createdTeachers[0];
    const teacher2 = createdTeachers[1]; 
    const teacher3 = createdTeachers[2];
    const teacher4 = createdTeachers[3];
    const teacher5 = createdTeachers[4];

    const sampleLessons = [
      // Monday (weekday: 1)
      { classCode: '7a', weekday: 1, num: 1, subjectId: mathSubject._id, teacherId: teacher1._id, room: '301' },
      { classCode: '7a', weekday: 1, num: 2, subjectId: russianSubject._id, teacherId: teacher2._id, room: '205' },
      { classCode: '7a', weekday: 1, num: 3, subjectId: physicsSubject._id, teacherId: teacher3._id, room: '401', subgroup: '–≥—É–º' },
      { classCode: '7a', weekday: 1, num: 3, subjectId: englishSubject._id, teacherId: teacher4._id, room: '208', subgroup: '—Ç–µ—Ö–Ω' },
      { classCode: '7a', weekday: 1, num: 4, subjectId: historySubject._id, teacherId: teacher5._id, room: '302' },

      // Tuesday (weekday: 2)  
      { classCode: '7a', weekday: 2, num: 1, subjectId: physicsSubject._id, teacherId: teacher3._id, room: '401' },
      { classCode: '7a', weekday: 2, num: 2, subjectId: mathSubject._id, teacherId: teacher1._id, room: '301' },
      { classCode: '7a', weekday: 2, num: 3, subjectId: englishSubject._id, teacherId: teacher4._id, room: '208' },
      { classCode: '7a', weekday: 2, num: 4, subjectId: russianSubject._id, teacherId: teacher2._id, room: '205' },

      // Wednesday (weekday: 3)
      { classCode: '7a', weekday: 3, num: 1, subjectId: mathSubject._id, teacherId: teacher1._id, room: '301' },
      { classCode: '7a', weekday: 3, num: 2, subjectId: historySubject._id, teacherId: teacher5._id, room: '302' },
      { classCode: '7a', weekday: 3, num: 3, subjectId: physicsSubject._id, teacherId: teacher3._id, room: '401' },

      // Add lessons for other classes
      { classCode: '8a', weekday: 1, num: 1, subjectId: russianSubject._id, teacherId: teacher2._id, room: '206' },
      { classCode: '8a', weekday: 1, num: 2, subjectId: mathSubject._id, teacherId: teacher1._id, room: '302' },
      { classCode: '9a', weekday: 1, num: 1, subjectId: physicsSubject._id, teacherId: teacher3._id, room: '402' }
    ];

    await Lesson.insertMany(sampleLessons);
    console.log(`üìÖ Created ${sampleLessons.length} sample lessons`);

    console.log('‚úÖ Database seeded successfully!');
    console.log('üîç Test the API with: http://localhost:3000/api/v1/schedule?classId=7a&date=2025-09-02');
    
  } catch (error) {
    console.error('‚ùå Error seeding database:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Database connection closed');
  }
}

// Run the seed function if called directly
if (require.main === module) {
  seedDatabase();
}

module.exports = seedDatabase;